{"version":3,"sources":["components/App.module.css","components/alert/Alert.module.css","transitions/slide.module.css","redux/contacts/contactsConstans.js","redux/contacts/contactsActions.js","components/contactForm/ContactForm.js","components/contactForm/contactListItem/ContactListItem.js","components/contactList/ContactList.js","components/filter/Filter.js","components/alert/Alert.js","components/App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js","components/contactForm/contactListItem/ContactsList.module.css"],"names":["module","exports","addContact","contact","type","contactsConstans","payload","id","uuidv4","removeContact","getFilterValue","filter","existContact","ContactForm","state","name","number","changeAlertFn","props","switchAlert","setTimeout","handleSubmit","e","preventDefault","items","some","onAddContact","setState","handleChange","target","value","onSubmit","this","placeholder","onChange","pattern","Component","protoType","PropTypes","string","connect","dispatch","contactsActions","ownProps","className","styles","item","span","button","onClick","ContactList","contacts","deleteContact","TransitionGroup","component","map","CSSTransition","key","timeout","classNames","slideTransition","unmountOnExit","mapDispatchToProps","getName","alert","in","App","prevstate","filterContacts","toLowerCase","includes","appear","title","length","onChangeFilter","actions","changeFilter","combineReducers","action","store","createStore","contactsReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bda90b8b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__37vNt\",\"appear\":\"App_appear__20uJx\",\"appearActive\":\"App_appearActive__2hNzz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Alert_alert__2S6Gk\",\"enter\":\"Alert_enter__3wGwt\",\"enterActive\":\"Alert_enterActive__FqMiV\",\"exit\":\"Alert_exit__3GuFa\",\"exitActive\":\"Alert_exitActive__2i4Vl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__3Nln5\",\"enterActive\":\"slide_enterActive__27w1Q\",\"exit\":\"slide_exit__2BA0_\",\"exitActive\":\"slide_exitActive__18mG0\"};","const ADD_CONTACT = '@contacts/addContact';\r\nconst REMOVE_CONTACT = '@contacts/removeContact';\r\nconst FILTER_CONTACT = '@contacts/filterContact';\r\nconst EXIST_CONTACT = '@contacts/existContact';\r\nexport default { ADD_CONTACT, REMOVE_CONTACT, FILTER_CONTACT, EXIST_CONTACT };","import { v4 as uuidv4 } from 'uuid';\r\nimport contactsConstans from './contactsConstans';\r\n\r\nconst addContact = contact => {\r\n  return {\r\n    type: contactsConstans.ADD_CONTACT,\r\n    payload: {\r\n      ...contact,\r\n      id: uuidv4(),\r\n    },\r\n  };\r\n};\r\n\r\nconst removeContact = id => {\r\n  return {\r\n    type: contactsConstans.REMOVE_CONTACT,\r\n    payload: id,\r\n  };\r\n};\r\n\r\nconst getFilterValue = filter => {\r\n  return {\r\n    type: contactsConstans.FILTER_CONTACT,\r\n    payload: filter,\r\n  };\r\n};\r\n\r\nconst existContact = () => {\r\n  return {\r\n    type: contactsConstans.EXIST_CONTACT,\r\n  };\r\n};\r\n\r\nexport default { addContact, removeContact, getFilterValue, existContact };\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contactsActions';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n  changeAlertFn = () => {\r\n    this.props.switchAlert();\r\n    setTimeout(() => {\r\n      this.props.switchAlert();\r\n    }, 2500);\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.name) {\r\n      const isNameExist = this.props.items.some(\r\n        contact => contact.name === this.state.name,\r\n      );\r\n      !isNameExist\r\n        ? this.props.onAddContact({\r\n            name: this.state.name,\r\n            number: this.state.number,\r\n          })\r\n        : this.changeAlertFn();\r\n\r\n      this.setState({\r\n        name: '',\r\n        number: '',\r\n      });\r\n    }\r\n    return;\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <h2>NAME</h2>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Enter name\"\r\n            onChange={this.handleChange}\r\n            value={this.state.name}\r\n          />\r\n          <h2>NUMBER</h2>\r\n          <input\r\n            type=\"tel\"\r\n            pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\r\n            name=\"number\"\r\n            placeholder=\"123-321-1111\"\r\n            onChange={this.handleChange}\r\n            value={this.state.number}\r\n          />\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.protoType = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    items: state.items,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onAddContact: contact => dispatch(contactsActions.addContact(contact)),\r\n  switchAlert: () => dispatch(contactsActions.existContact()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from './ContactsList.module.css'\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../../redux/contacts/contactsActions\";\r\n\r\nconst ContactListItem = ({ contact: { id, name, number }, removeContact }) => {\r\n  return (\r\n    <li className={styles.item}>\r\n      <span className={styles.span}>{name} </span>\r\n      <span className={styles.span}>{number} </span>\r\n      <button\r\n        className={styles.button}\r\n        type=\"button\"\r\n        id={id}\r\n        onClick={()=>removeContact({id})}\r\n      >\r\n        X\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired\r\n  })\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  removeContact: () => dispatch(contactsActions.removeContact(ownProps.id)),\r\n});\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactListItem);","import React from \"react\";\r\nimport ContactListItem from \"../contactForm/contactListItem/ContactListItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\r\nimport slideTransition from '../../transitions/slide.module.css'\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => (\r\n  <TransitionGroup component=\"ul\">\r\n    {contacts.map(contact => (\r\n      <CSSTransition\r\n        key={contact.id}\r\n        timeout={250}\r\n        classNames={slideTransition}\r\n        unmountOnExit\r\n      >\r\n        <ContactListItem\r\n          contact={contact}\r\n          id={contact.id}\r\n          // key={contact.id}\r\n          deleteContact={deleteContact}\r\n        />\r\n      </CSSTransition>\r\n    ))}\r\n  </TransitionGroup>\r\n);\r\n\r\nContactList.propTypes = {\r\n  deleteContact: PropTypes.func.isRequired,\r\n  contact: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired\r\n    })\r\n  )\r\n};\r\n\r\nexport default ContactList;","import React from \"react\";\r\nimport {connect} from 'react-redux'\r\nimport contactsActions from \"../../redux/contacts/contactsActions\";\r\n\r\n// import PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ filter, getFilterValue, getName }) => (\r\n  <>\r\n    <p>Find contact by name</p>\r\n    <input\r\n    type=\"text\"\r\n    onChange={getName}\r\n    value={filter}\r\n    />\r\n  </>\r\n);\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     // filter: state.filter\r\n//   }\r\n// }\r\n\r\nconst mapDispatchToProps = {\r\n  getFilterValue: contactsActions.getFilterValue,\r\n}\r\n// Filter.propTypes = {\r\n//   getName: PropTypes.func.isRequired\r\n// };\r\n\r\nexport default connect(null, mapDispatchToProps)(Filter);","// import React, { Component } from 'react';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./Alert.module.css\";\r\n\r\nconst Alert = ({alert}) => {\r\n        return (\r\n        <CSSTransition\r\n        in={alert}\r\n        classNames={styles}\r\n        timeout={250}\r\n        unmountOnExit>\r\n        <p className={styles.alert}>The name is alredy exsist</p>\r\n        </CSSTransition>\r\n        );\r\n    }\r\n\r\n// class Alert extends Component {\r\n//     render() {\r\n//         return (\r\n//         <CSSTransition\r\n//         in={this.props.alert}\r\n//         classNames={styles}\r\n//         timeout={250}\r\n//         unmountOnExit>\r\n//         <p className={styles.alert}>The name is alredy exsist</p>\r\n//         </CSSTransition>\r\n//         );\r\n//     }\r\n// }\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        alert: state.alert\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Alert);","import React, { Component } from 'react';\r\nimport ContactForm from './contactForm/ContactForm';\r\nimport ContactList from './contactList/ContactList';\r\nimport Filter from './filter/Filter';\r\nimport Alert from './alert/Alert';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styles from './App.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../redux/contacts/contactsActions';\r\nimport contactsActions from '../redux/contacts/contactsActions';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      // { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      // { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      // { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      // { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" }\r\n    ],\r\n    filter: '',\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  deleteContact = e => {\r\n    const id = e.target.id;\r\n    this.setState(prevstate => ({\r\n      contacts: prevstate.contacts.filter(contact => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  getName = e => {\r\n    this.setState({\r\n      filter: e.target.value,\r\n    });\r\n  };\r\n\r\n  filterContacts = () => {\r\n    return this.props.items.filter(contact =>\r\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    return (\r\n      <>\r\n        <Alert />\r\n        <CSSTransition\r\n          in={true}\r\n          timeout={500}\r\n          classNames={styles}\r\n          appear={true}\r\n          unmountOnExit\r\n        >\r\n          <p className={styles.title}>Phonebook</p>\r\n        </CSSTransition>\r\n\r\n        <ContactForm />\r\n        <h2>Contacts</h2>\r\n        {this.props.items.length > 1 && (\r\n          <Filter getName={this.getName} value={filter} />\r\n        )}\r\n        <ContactList contacts={this.filterContacts()} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    items: state.items,\r\n    alert: state.alert,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChangeFilter: filter => dispatch(actions.changeFilter(filter)),\r\n  switchAlert: () => dispatch(contactsActions.existContact()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { combineReducers } from 'redux'\r\nimport contactsConstans from './contactsConstans';\r\n\r\nconst contactsReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case  contactsConstans.ADD_CONTACT:\r\n            return [...state, action.payload];\r\n\r\n        case contactsConstans.REMOVE_CONTACT:\r\n            return state.filter(contact => contact.id !== action.payload);\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst filterReducer = (state = '', action) => {\r\n    switch (action.type) {\r\n        case  contactsConstans.FILTER_CONTACT:\r\n            return action.payload;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst alertReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case contactsConstans.EXIST_CONTACT:\r\n            return !state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default combineReducers({ items: contactsReducer, filter: filterReducer, alert: alertReducer });","import { createStore } from 'redux'\r\nimport contactsReducer from './contacts/contactsReducer';\r\nconst store = createStore(contactsReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './components/App.module.css';\r\nimport App from './components/App';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n<App />\r\n</Provider>,\r\n document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactsList_button__1usz_\",\"item\":\"ContactsList_item__2LBv_\",\"span\":\"ContactsList_span__OiU8D\"};"],"sourceRoot":""}